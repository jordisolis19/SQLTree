### In this project I used a Music Databse with 11 tables, each table with different conection to each-other. Then using SQLlite I solved for different query's
(found bellow) utilizing joins, aggregates and many other SQL functions.  This served as my final proyect for my SQL certificate###


#1.-Find Customers (their full names, customer ID, and country) who are not in the US. 

SELECT Firstname, LastName, Customerid, Country
FROM customers
WHERE Country != "USA"
ORDER BY Country


#2.-Show only the Customers from Brazil.

SELECT Firstname, LastName, Customerid, Country
FROM customers
WHERE Country = "Brazil"


#3.-Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT Firstname, Lastname, Invoiceid, Invoicedate, Country
FROM customers as c
left JOIN Invoices as i
ON c.Customerid  = i.Customerid 
WHERE Country = "Brazil"
Order by invoiceid


#4.-Show the Employees who are Sales Agents.

SELECT Employeeid, Firstname, Lastname, Title
from EMPLOYEES
WHERE Title LIKE '%sales%'


#5.-Create a  list of countries we've worked for from the Invoice table.

SELECT BillingCountry
FROM Invoices
Group by BillingCountry

#6.-Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

WITH Salebyemployee AS (
SELECT SupportRepid, invoiceid
FROM Invoices as i
JOIN Customers as c
on  i.Customerid= c.Customerid)

SELECT Firstname, Lastname, Invoiceid
FROM Employees as e 
JOIN Salebyemployee as s
ON e.Employeeid = s.SupportRepid


#7.-Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

WITH invoiceinfo AS (
SELECT * 
FROM Invoices as inv
JOIN Invoice_items as item
ON inv.invoiceid = item.invoicelineid),

 peopleinfo AS (
SELECT c.Firstname as client, e.Firstname as worker, Customerid, c.Country
FROM Customers as c
JOIN Employees as e
ON c.Supportrepid = e.Employeeid)

SELECT client, worker, Country, SUM(Unitprice*Quantity) as "Invoice total"
FROM peopleinfo as p
JOIN invoiceinfo as info
ON p.Customerid = info.Customerid
GROUP BY invoiceid


#8.-How many Invoices were there in 2009?

SELECT count(invoiceid)
FROM Invoices
WHERE InvoiceDate LIKE '%2009%'


#9.-What are the total sales for 2009?

SELECT SUM (quantity * Unitprice)
FROM invoices as i
JOIN invoice_items as item
ON i.invoiceid = item.invoicelineid
WHERE InvoiceDate LIKE '%2009%'


#10.- Write a query that includes the purchased track name with each invoice line item.

WITH invoiceinfo AS( 
SELECT i.Invoiceid, Trackid
FROM Invoices as i
JOIN Invoice_items as item
ON i.invoiceid = item.invoicelineid)

Select Invoiceid, Name
FROM invoiceinfo 
JOIN Tracks
ON Tracks.trackid = invoiceinfo.trackid


#11.-Write a query that includes the purchased track name AND artist name with each invoice line item.

WITH invoiceinfo AS( 
SELECT i.Invoiceid, Trackid
FROM Invoices as i
JOIN Invoice_items as item
ON i.invoiceid = item.invoiceLineid),

songinfo AS(
SELECT  tr.Trackid, a.Artistid, tr.name
FROM Albums as a
JOIN Tracks as tr
ON a.Albumid = tr.Albumid),

totalinfo AS (
SELECT invoiceid, name as song, Artistid
FROM songinfo as s
JOIN invoiceinfo as info
ON info.trackid = s.trackid)

SELECT song, name artist, invoiceid
FROM artists as art
JOIN totalinfo as total
ON art.Artistid = total.Artistid


#12.-Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

WITH trackmedia AS (
SELECT t.name,  t.Genreid, t.Albumid, m.name as media
FROM Tracks as t
JOIN Media_types as m
on t.Mediatypeid = m.Mediatypeid),

musicinfo AS (
SELECT tm.name, media, Albumid, g.name as genre
FROM trackmedia as tm
JOIN Genres as g
ON tm.Genreid = g.Genreid)

SELECT Name "Song" , Media, Genre, Title as "Album"
FROM musicinfo as info
JOIN Albums as a
on a.Albumid = info.Albumid


#13.-Show the total sales made by each sales agent.

WITH people AS(
SELECT e.Firstname as name, e.Lastname as lname, c.Customerid
FROM Employees as e
JOIN Customers as c
ON e.employeeid = c.SupportRepid)

Select name, Lname, COUNT(Invoiceid) as "Total sales"
FROM people as p
JOIN Invoices as i
ON p.Customerid = i.Customerid
GROUP BY name

#14.-Which sales agent made the most  sales in 2009?

WITH people AS(
SELECT e.Firstname as name, e.Lastname as lname, c.Customerid
FROM Employees as e
JOIN Customers as c
ON e.employeeid = c.SupportRepid)

Select name, Lname, COUNT(Invoiceid) as totalsales
FROM people as p
JOIN Invoices as i
ON p.Customerid = i.Customerid
WHERE InvoiceDate LIKE '%2009%'
GROUP BY name
ORDER BY totalsales DESC
LIMIT 1


#15-. List all employees along side their supervisors. (Self-reference)

SELECT e.Firstname, e.Lastname, e.title as "Job Title" , s.Firstname as " Supervisor" , s.title as "Supervisor Title"
FROM employees as e
LEFT JOIN employees as s
ON e.reportsto = s.employeeid

#16.- Customer's employer arrenged by popularity

#17.- Country with the most sales

#18.- Average total sales by employee

#19.- Top 3 best seller songs per Country

#20.- Percentage of sales by employeed vs unemployed customers

#21.- top 2 best seller songs by Genre

#22.- Number of people under each Manager

#23.- Number of tracks per album including album name, no. of tracks and artist name

#24.- Total Cost of each album (album name plus cost)

#25.- Display tracks with higher than average sales as "popular", close to average as "average" and under average as "unpopular"

#26.- All tracks showing name of the track, name of the playlist it belongs too, no. tracks of that playlist.

#27.- Artist names with the total of albums available and total of tracks.

#28.- Artist names and their total of sales (number of sales and total amount)

#29.- Albums arrenged from top seller to lowest sales

#30.- Composer name arrenged by Genre, Total Sales and number of tracks
